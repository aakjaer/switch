///////////////////////////////////////////////////////////////
//
//  checkbox/switches
//
//
//  Based on traditional checkboxes which are hidden and
//  replaced by nifty animated switches.
//
//  Elements needed:
//  .cb-switch
//    - label.cb-switch__label
//    - input[type="checkbox"]
//    - .cb-switch__icon
//
//  Note: markup is not identical to bootstraps (label doesn't surround the input) 
//
//
///////////////////////////////////////////////////////////////

@import "custom-bootstrap-variables";


$icon-font: "icons";
$icon-ok: "n";
$icon-close: "c";


// proportions
$switch-width: 55px;
$switch-height: 30px;
$switch-padding: 3px;
$switch-knob-size: $switch-height - ($switch-padding * 2);

$checkbox-size: 20px;

///////////////////////////////////////////////////////////////



///////////////////////////////////////

// general styles

///////////////////////////////////////

.cb-switch {
    @extend .checkbox;
}

// make sure the real checkbox is on top of the other elements.
.cb-switch input[type="checkbox"] {
    opacity: 0;
    z-index: 10;
    margin: 0;
    cursor: pointer;
}

.cb-switch__label:hover {
    cursor: pointer;
}

.cb-switch__label::after {
    @extend .icon-ok:before;
}

// cant do this inside the mediaqueries - needs a loving hand
.cb-switch__icon {
    display: none;

    &::before {
        content: $icon-ok;
        font-family: $icon-font;
    }

    &::after {
        content: $icon-close;
        font-family: $icon-font;
    }
}





///////////////////////////////////////

//  disabled state

///////////////////////////////////////

.cb-switch input[type="checkbox"][disabled]:hover {
    cursor: $cursor-disabled;
}

.cb-switch input[type="checkbox"][disabled] + .cb-switch__label:hover {
    cursor: default;
}


///////////////////////////////////////

//  on mobile show switches

///////////////////////////////////////

@media screen and (max-width: $screen-xs-max) {

    .cb-switch {
        display: block;
        min-height: $switch-height;
        margin: 0;

        // general styles
        input[type="checkbox"],
        .cb-switch__label::before,
        .cb-switch__icon {
            position: absolute;
            top: 0;
            right: 0;
            width: $switch-width;
            height: $switch-height;
            border-radius: $switch-height / 2;
        }

        // text label next to the switch
        .cb-switch__label {
            display: block;
            position: relative;
            max-width: none;
            min-height: $switch-height;
            padding: 0 ($switch-width + 15px) 0 0;
            @include user-select(none);
            @include transition(color 0.2s);
            @include translate3d(0,0,0);
            @include backface-visibility(hidden);
        }

        .cb-switch__label::before,
        .cb-switch__label::after {
            content: "";
            position: absolute;
        }

        // switch background
        .cb-switch__label::before {
            background: #fff;
            border: 1px solid $color-3;
            will-change: transform;
            @include transition(all 0.5s);
        }

        // switch knob
        .cb-switch__label::after {
            display: block;
            top: $switch-padding;
            right: 0;
            width: $switch-knob-size;
            height: $switch-knob-size;
            @include translate(-($switch-width - $switch-knob-size) + $switch-padding, 0);
            background: #fff;
            border-radius: 50%;
            @include box-shadow(0 0 0 1px rgba($color-3, 0.4), 0 2px 4px 0 rgba(0,0,0,0.30));
            @include transition(all 0.2s);
        }

        // on/off icon container
        .cb-switch__icon {
            display: block;

            &::before,
            &::after {
                position: absolute;
                top: 50%;
                margin: 0 !important;
                @include transition(transform 0.3s, opacity 0.3s);
                font-size: 0.6em;
            }

            // on icon
            &::before {
                opacity: 0;
                left: 15%;
                @include translate(75%,-45%);
                color: #fff;
            }

            // off icon
            &::after {
                right: 15%;
                @include translate(0,-45%);
                color: $color-2;
            }
        }


        ///////////////////////////////////////
        
        //  active state

        ///////////////////////////////////////

        input[type="checkbox"]:checked + .cb-switch__label {
            
            // switch background
            &::before {
                background: $color-4;
                border-color: $color-4;
            }

            // switch knob
            &::after {
                @include translate(-$switch-padding,0);
                @include box-shadow(0 0 0 1px #fff, 0 2px 4px 0 rgba(0,0,0,0.30));
            }

            // icon animations
            .cb-switch__icon {

                // on icon
                &::before {
                    opacity: 1;
                    @include translate(0,-45%);
                }

                // off icon
                &::after {
                    opacity: 0;
                    @include translate(-75% ,-45%);
                }
            }
        }
    }


    ///////////////////////////////////////

    //  deactivated state
    
    ///////////////////////////////////////

    .cb-switch input[type="checkbox"][disabled] + .cb-switch__label,
    .cb-switch input[type="checkbox"][disabled] + .cb-switch__label::after {
        opacity: 0.7;
    }

    ///////////////////////////////////////

    //  indeterminate state

    ///////////////////////////////////////



    // hide icons
    .cb-switch input[type="checkbox"]:indeterminate + .cb-switch__label {

        // switch background
        &::before {
            background-color: $gray-lighter;
            border-color: $gray-lighter;
        }

        // knob
        &::after {
            @include translate(-(($switch-width/2) - ($switch-knob-size/2)), -50%);
        }

        .cb-switch__icon::before,    
        .cb-switch__icon::after {
            display: none;
        }
    }
}



///////////////////////////////////////

//  on desktop show checkboxes

///////////////////////////////////////

@media screen and (min-width: $screen-sm-min) {
 
    .cb-switch {
        margin: 0;
        min-height: $checkbox-size;
    }

    .cb-switch + .cb-switch {
        margin-top: 0;
    }

    .cb-switch .cb-switch__label {
        position: relative;
        max-width: none;
        min-height: $checkbox-size;
        padding-left: $checkbox-size + 15;
        @include transition(color 0.2s);
        @include user-select(none);
        @include backface-visibility(hidden);
        @include translate3d(0,0,0);
    }

    .cb-switch input[type="checkbox"],
    .cb-switch__label::before,
    .cb-switch__label::after {
        position: absolute;
        display: inline-block;
        width: $checkbox-size;
        height: $checkbox-size;
        left: 0;
        top: 0;
        border-radius: 2px;
    }

    .cb-switch__label::before,
    .cb-switch__label::after {
        top: 2px;
        text-align: center;
        @include transition(all 0.2s);
    }

    // checkbox background
    .cb-switch__label::before {
        content: "";
        background: #fff;
        border: 1px solid $input-border;
        will-change: transform;
    }

    // check icon
    .cb-switch__label::after {
        font-family: $icon-font;
        opacity: 0;
        line-height: $checkbox-size;
        font-size: 0.75em;
        color: white;
        @include translate(0,-25%);
        @include transition-delay(0s);
    }

    ///////////////////////////////////////

    //  checked state

    ///////////////////////////////////////

    .cb-switch input[type="checkbox"]:checked + .cb-switch__label,
    .cb-switch input[type="checkbox"]:indeterminate + .cb-switch__label {
        color: $text-color;

        // checkbox background
        &::before {
            background: $color-4;
            border-color: $color-4;
            @include transition-delay(0s);
        }

        &::after {
            opacity: 1;
            transform: translateY(0);
            @include transition-delay(0.1s);
        }
    }

    ///////////////////////////////////////

    //  deactivated state

    ///////////////////////////////////////

    .cb-switch input[type="checkbox"][disabled] + .cb-switch__label,
    .cb-switch input[type="checkbox"][disabled] + .cb-switch__label::before {
        opacity: 0.7;
    }

    // //  :focus state (when tabbing)
    // .cb-switch input[type="checkbox"]:focus + .cb-switch__label::before {
    //     // @include box-shadow(0 0 8px $input-border-focus-rgba);
    //     background-color: $gray-lighter;
    // }


    ///////////////////////////////////////

    //  indeterminate state

    // Use the following in the console to test this state

    // var checkbox = document.getElementById("checkbox-all");
    // checkbox.indeterminate = true;

    ///////////////////////////////////////

    .cb-switch input[type="checkbox"]:indeterminate + .cb-switch__label::after {
        content: "O";
    }

}



